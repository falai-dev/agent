/**
 * Event history and interaction types
 */

/**
 * Types of events in the interaction history
 */
export enum EventKind {
  /** A text message event */
  MESSAGE = "message",
  /** A tool execution event */
  TOOL = "tool",
  /** A status update event */
  STATUS = "status",
}

/**
 * Source of an event
 */
export enum EventSource {
  /** Event originated from the customer/user */
  CUSTOMER = "customer",
  /** Event from customer UI application */
  CUSTOMER_UI = "customer_ui",
  /** Event from human service agent */
  HUMAN_AGENT = "human_agent",
  /** Human agent acting on behalf of AI agent */
  HUMAN_AGENT_ON_BEHALF_OF_AI_AGENT = "human_agent_on_behalf_of_ai_agent",
  /** Event generated by AI agent */
  AI_AGENT = "ai_agent",
  /** System-generated event */
  SYSTEM = "system",
}

/**
 * Participant in a conversation
 */
export interface Participant {
  /** Display name */
  display_name: string;
  /** Unique identifier */
  id?: string;
}

/**
 * Data for a message event
 */
export interface MessageEventData {
  /** The participant who sent the message */
  participant: Participant;
  /** The message content */
  message: string;
  /** Whether the message was flagged/censored */
  flagged?: boolean;
  /** Tags/reasons if flagged */
  tags?: string[];
  /** Session metadata attached to this message */
  session?: {
    routeId?: string;
    routeTitle?: string;
    stateId?: string;
    stateDescription?: string;
    extracted?: Record<string, unknown>;
  };
}

/**
 * Result of a tool execution
 */
export interface ToolResult<TData = unknown> {
  /** The result data */
  data: TData;
  /** Optional metadata */
  meta?: Record<string, unknown>;
}

/**
 * A single tool call within a tool event
 */
export interface ToolCall<TArgs = unknown, TResult = unknown> {
  /** Tool identifier */
  tool_id: string;
  /** Arguments passed to the tool */
  arguments: TArgs;
  /** Result returned by the tool */
  result: ToolResult<TResult>;
}

/**
 * Data for a tool event
 */
export interface ToolEventData {
  /** Array of tool calls executed */
  tool_calls: ToolCall[];
}

/**
 * Data for a status event
 */
export interface StatusEventData {
  /** Status message */
  status: string;
  /** Additional details */
  details?: Record<string, unknown>;
}

/**
 * Base event structure
 */
export interface Event<
  TData = MessageEventData | ToolEventData | StatusEventData
> {
  /** Type of event */
  kind: EventKind;
  /** Source of the event */
  source: EventSource;
  /** Event-specific data */
  data: TData;
  /** Timestamp (ISO string) */
  timestamp?: string;
  /** Unique event identifier */
  id?: string;
}

/**
 * An emitted event (staged for inclusion)
 */
export interface EmittedEvent<
  TData = MessageEventData | ToolEventData | StatusEventData
> extends Event<TData> {
  /** Whether this event has been committed */
  committed?: boolean;
}
