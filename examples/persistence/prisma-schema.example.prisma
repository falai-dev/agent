// This is an example Prisma schema file for @falai/agent persistence
// Copy and adapt this to your needs

datasource db {
  provider = "postgresql" // or "mysql", "sqlite", "sqlserver", "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Agent Session model
// Stores conversation session step
model AgentSession {
  id              String    @id @default(cuid())
  userId          String?   @map("user_id")
  agentName       String?   @map("agent_name")
  status          String    @default("active") // "active" | "completed" | "abandoned"
  currentRoute    String?   @map("current_route")
  currentStep    String?   @map("current_step")
  collectedData   Json?     @map("collected_data")
  messageCount    Int       @default(0) @map("message_count")
  lastMessageAt   DateTime? @map("last_message_at")
  completedAt     DateTime? @map("completed_at")
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")

  // Relations
  messages AgentMessage[]

  @@index([userId])
  @@index([status])
  @@index([userId, status])
  @@map("agent_sessions")
}

// Agent Message model
// Stores individual messages in a conversation
model AgentMessage {
  id        String   @id @default(cuid())
  sessionId String   @map("session_id")
  userId    String?  @map("user_id")
  role      String   // "user" | "assistant" | "agent" | "system"
  content   String   @db.Text
  route     String?
  step     String?
  toolCalls Json?    @map("tool_calls")
  event     Json?    // Optional: store full event data
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  session AgentSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@index([sessionId])
  @@index([userId])
  @@index([sessionId, createdAt])
  @@map("agent_messages")
}

// Alternative: If you want different table names, you can customize:
// 
// model ConversationSession {
//   id              String    @id @default(cuid())
//   ...
//   @@map("conversations")
// }
//
// model ChatMessage {
//   id        String   @id @default(cuid())
//   ...
//   @@map("chat_messages")
// }

